---
title: "git_backed_test"
format: html
---

## Steps

1. First create a directory / RStudio project for the document
1. Create a boilerplate version of your `report.qmd` file 
1. Run `rsconnect::writeManifest()` within this project. Make sure the manifest doesn't capture any sensitive / large data!
1. Commit your report and the manifest to the git repo
1. Push the changes to GitHub
1. From the on-prem Connect server [main page](https://ccb-rstudio-connect.hms.harvard.edu/connect/#/welcome) in a browser, go `Content > Publish > Import from Git`
1. Enter the repo URL e.g. `https://github.com/ccb-hms/git_backed_test/`
1. Select a branch and enter a title for the content

Connect will then pull the repo contents, render the document, and present it on the Connect server. By default it checks for new commits every 15 minutes. This comment was pushed as a git commit and though I engaged in no additional interaction with the Connect server, it will end up showing up there.  

Additional details for more complicated configurations (like private repos) [here](https://docs.posit.co/connect/user/git-backed/).

## Tests

Let's try reading a file from `/n/data1/hms/ccb/resources/`. This is a data
frame with two columns and 10^8^ rows. I created it like this (this chunk is not evaluated by this document):

```{r}
#| eval: false

library(data.table)

x = data.table(i = 1:1e8, x = rnorm(1e8))

```

It's pretty big so we can test the network speed between
`/n/data1/hms/ccb/resources/` and the Connect server:

```
> object.size(x) |> format(units = "auto")
[1] "1.1 Gb"
```

It's 2.6GB on disk as a tsv. Let's try to read it in and time how long it takes:

```{r}
library(data.table)

setDTthreads(1) # not sure what the Connect server would default to

system.time({x <- fread("/n/data1/hms/ccb/resources/git_backed_test/data/x.tsv")})

x
```

For comparison that `fread()` takes 6.7 seconds on an O2 compute node using 1 thread.

